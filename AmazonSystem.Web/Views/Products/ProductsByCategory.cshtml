@using AmazonSystem.Products.ViewModels
@using Newtonsoft.Json

@model ListProductViewModel

@{
    ViewData["Title"] = "Products";

    var products = JsonConvert.SerializeObject(Model.Products);
}

<link rel="stylesheet" href="~/css/productsByCategory.css" asp-append-version="true" />

<script src="~/js/ajaxProductsByPrice.js" asp-append-version="true"></script>
<script src="~/lib/jquery/dist/jquery.min.js"></script>

<div class="container">
    <div class="bg-white rounded d-flex align-items-center justify-content-between" id="header">
        <button class="btn btn-hide text-uppercase" type="button" data-toggle="collapse" data-target="#filterbar" aria-expanded="false" aria-controls="filterbar" id="filter-btn" onclick="changeBtnTxt()"> <span class="fas fa-angle-left" id="filter-angle"></span> <span id="btn-txt">Hide filters</span> </button>
        <nav class="navbar navbar-expand-lg navbar-light pl-lg-0 pl-auto">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#mynav" aria-controls="mynav" aria-expanded="false" aria-label="Toggle navigation" onclick="chnageIcon()" id="icon"> <span class="navbar-toggler-icon"></span> </button>
            <div class="collapse navbar-collapse" id="mynav">
                <ul class="navbar-nav d-lg-flex align-items-lg-center">
                    <li class="nav-item active">
                        <select name="sort" id="sort">
                            <option value="" hidden selected>Sort by</option>
                            <option value="price">Price</option>
                            <option value="popularity">Popularity</option>
                            <option value="rating">Rating</option>
                        </select>
                    </li>
                </ul>
            </div>
        </nav>
        <div class="ml-auto mt-3 mr-2">
            <nav aria-label="Page navigation example">
                <ul class="pagination"></ul>
                <!--<ul class="pagination">-->
                @*@for (var i = 1; i <= Model.PagesCount; i++)
                    {
                        <li class="page-item active">
                            <a class="page-link" asp-controller="Products" asp-action="ProductsByCategory"
                               asp-route-category="@Model.Category" asp-route-id="@i">@i</a>
                        </li>
                    }*@
                <!--</ul>-->
            </nav>
        </div>
    </div>
    <div id="content" class="my-5">
        <div id="filterbar" class="collapse">
            <div class="box border-bottom">
                <div class="form-group text-center">
                    <div class="btn-group" data-toggle="buttons"> <label class="btn btn-success form-check-label"> <input class="form-check-input" type="radio"> Reset </label> <label class="btn btn-success form-check-label active"> <input class="form-check-input" type="radio" checked> Apply </label> </div>
                </div>
                <div>
                    <label class="tick">
                        New <input type="checkbox" checked="checked">
                        <span class="check"></span>
                    </label>
                </div>
                <div> <label class="tick">Used <input type="checkbox"> <span class="check"></span> </label> </div>
            </div>
            <div class="box border-bottom">
                <div class="box-label text-uppercase d-flex align-items-center">
                    Brands
                    <button class="btn ml-auto" type="button" data-toggle="collapse" data-target="#inner-box" aria-expanded="false" aria-controls="inner-box" id="out" onclick="outerFilter()">
                        <span class="fas fa-plus"></span>
                    </button>
                </div>
                <div id="inner-box" class="collapse mt-2 mr-1">
                    <div class="my-1">
                        <label class="tick">
                            Brand 1
                            <input type="checkbox" checked="checked">
                            <span class="check"></span>
                        </label>
                    </div>
                    <div class="my-1">
                        <label class="tick">
                            Brand 2
                            <input type="checkbox" checked="checked">
                            <span class="check"></span>
                        </label>
                    </div>
                </div>
            </div>
            <div class="box border-bottom">
                <div class="box-label text-uppercase d-flex align-items-center">
                    Price
                    <button class="btn ml-auto" type="button" data-toggle="collapse" data-target="#inner-box2" aria-expanded="false" aria-controls="inner-box2">
                        <span class="fas fa-plus"></span>
                    </button>
                </div>
                <div id="inner-box2" class="collapse mt-2 mr-1">
                    <div class="my-1">
                        <button onclick="under25(@products)" class="border-0" style="background: none;">
                            Under <i class="fas fa-dollar-sign"></i>25
                        </button>
                    </div>
                    <div class="my-1">
                        <button class="border-0" style="background: none;"
                                onclick="between25and50('@Model.Category', '@Model.CurrentPage')">
                            <label class="tick">
                                <i class="fas fa-dollar-sign"></i>25 to <i class="fas fa-dollar-sign"></i>50
                            </label>
                        </button>
                    </div>
                    <div class="my-1">
                        <button class="border-0" style="background: none;"
                                onclick="between50and100('@Model.Category', '@Model.CurrentPage')">
                            <label class="tick">
                                <i class="fas fa-dollar-sign">
                                </i>50 to <i class="fas fa-dollar-sign"></i>100
                            </label>
                        </button>
                    </div>
                    <div class="my-1">
                        <button class="border-0" style="background: none;"
                                onclick="between100and200('@Model.Category', '@Model.CurrentPage')">
                            <label class="tick">
                                <i class="fas fa-dollar-sign"></i>100 to <i class="fas fa-dollar-sign"></i>200
                            </label>
                        </button>
                    </div>
                    <div class="my-1">
                        <button class="border-0" style="background: none;"
                                onclick="above200('@Model.Category', '@Model.CurrentPage')">
                            <label class="tick">
                                <i class="fas fa-dollar-sign"></i>200 & <i class="fas fa-dollar-sign"></i>Above
                            </label>
                        </button>
                    </div>
                </div>
            </div>

            <div class="box border-bottom">
                <div class="box-label text-uppercase d-flex align-items-center">
                    Avg Reviews
                    <button class="btn ml-auto" type="button" data-toggle="collapse" data-target="#inner-box" aria-expanded="false" aria-controls="inner-box" id="out" onclick="outerFilter()">
                        <span class="fas fa-plus"></span>
                    </button>
                </div>
                <div id="inner-box" class="collapse mt-2 mr-1">
                    <div class="my-1">
                        <label class="tick">
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                        </label>
                    </div>
                    <div class="my-1">
                        <label class="tick">
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                        </label>
                    </div>
                    <div class="my-1">
                        <label class="tick">
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                        </label>
                    </div>
                    <div class="my-1">
                        <label class="tick">
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                        </label>
                    </div>
                    <div class="my-1">
                        <label class="tick">
                            <i class="fas fa-star" style="color: #FFA41C;"></i>
                        </label>
                    </div>
                </div>
            </div>
        </div>
        <div id="products">
            <div id="items" class="row mx-0">
                @if (Model.Products.Count == 0)
                {
                    <div class="alert alert-info">No items</div>
                }

                <div class="col-md-12">
                    <p style="display: none;" class="alert alert-info w-100 message-cart"></p>
                </div>

                @*@foreach (var product in Model.Products)
                    {
                        <a href="javascript:void(0)">
                            <div class="list-product col-lg-4 col-md-6">
                                <div class="card d-flex flex-column align-items-center">
                                    <div class="product-name">@product.Name</div>
                                    <div class="card-img">
                                        <img src="@product.ImageUrl" alt="product image">
                                    </div>
                                    <div class="card-body pt-5">
                                        <div class="d-flex align-items-center price text-md-center">
                                            <span><i class="fas fa-dollar-sign"></i></span>
                                            <div class="text-md-center">@product.Price</div>
                                        </div>
                                        <div class="d-flex align-items-center">
                                            <a asp-area="" asp-controller="Products" asp-action="Details" asp-route-id="@product.Id" class="w-75 btn btn-outline-success">Details</a>
                                            <button onclick="addToCart('@product.Id')" class="w-75 btn btn-outline-warning" style="min-width: 120px; margin-left: 8px;">Add to cart</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    }*@
            </div>
        </div>
    </div>
</div>

<script>
    const products = @Html.Raw(Json.Serialize(Model.Products));
    let currentPage = 1
    let productsPerPage = 3
    let totalPages = Math.ceil(products.length / productsPerPage)

    const handleNewPage = (e) => {
        const newPage = Number(e.target.innerHTML)

        currentPage = newPage;
        // TODO ...

    }

    const displayTotalPages = (totalPages) => {
        const pagination = $('.pagination')

        for (let i = 1; i <= totalPages; i++) {
            const li = document.createElement('li')
            li.className = 'page-link'
            li.textContent = i;
            li.addEventListener('click', handleNewPage)
            pagination.append(li)
        }
    }

    const displayPartProducts = (products) => {
        const container = $('#items')
        container.html('')

        for (let product of products) {
            let template = `
                <div class="list-product col-lg-4 col-md-6">
                     <div class="card d-flex flex-column align-items-center">
                          <div class="product-name">product.Name</div>
                               <div class="card-img">
                                    <img src="product.ImageUrl" alt="product image">
                               </div>
                               <div class="card-body pt-5">
                                    <div class="d-flex align-items-center price text-md-center">
                                         <span><i class="fas fa-dollar-sign"></i></span>
                                         <div class="text-md-center">product.Price</div>
                                    </div>
                                    <div class="d-flex align-items-center">
                                         <a href="/Products/Details/product.Id" class="w-75 btn btn-outline-success">Details</a>
                                         <button onclick="addToCart('product.Id')" class="w-75 btn btn-outline-warning" style="min-width: 120px; margin-left: 8px;">Add to cart</button>
                                    </div>
                              </div>
                          </div>
                    </div>
                </div>
`
            template = template
                .replace('product.Name', product.name)
                .replace('product.ImageUrl', product.imageUrl)
                .replace('product.Price', product.price)
                .replaceAll('product.Id', product.id)

            container.append(template)
            console.log(product)
        }
    }

    function Pagination() {
        displayTotalPages(totalPages)
        displayPartProducts(products.slice(currentPage - 1, productsPerPage))
    }

    Pagination()
</script>