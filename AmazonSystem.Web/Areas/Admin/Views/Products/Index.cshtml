@using AmazonSystem.Products.ViewModels
@model ProductViewModel
@{
    ViewData["Title"] = "Products";
}

<script src="~/js/ajaxSearch.js"></script>

<div class="container" style=" margin-top: 40px;">
    <div class="row">
        <div class="col-12 col-sm-3">
            <div class="card bg-light mb-3">
                <div class="card-header bg-primary text-white text-uppercase"><i class="fa fa-list"></i> Categories</div>
                <ul class="list-group category_block">
                    @foreach (var category in Model.Categories)
                    {
                        <li class="list-group-item">
                            <button class="btn btn-link" onclick="ajaxSearch(`@category.Name`)">
                                @category.Name
                            </button>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="col">
            <div class="row">
                <div class="row displayProducts">
                    @foreach (var product in Model.Products)
                    {
                        <div class="col-12 col-md-6 col-lg-4">
                            <div class="card">
                                <img class="card-img-top" src="@product.ImageUrl" alt="Card image cap">
                                <div class="card-body">
                                    <h4 class="card-title">@product.Name</h4>
                                    <div class="row">
                                        <div class="col">
                                            <a class="btn btn-outline-success m-auto" asp-area="Admin" asp-controller="Products" asp-action="Details" asp-route-id="@product.Id">Details</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="col-12" style="margin-top: 40px;">
                    <nav aria-label="...">
                        <ul class="pagination">
                            @if (Model.CurrentPage > 1)
                            {
                                <li class="page-item active">
                                    <a class="page-link" asp-area="Admin" asp-controller="Products" asp-action="Index" asp-route-id="@(this.Model.CurrentPage - 1)">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            }

                            @{
                                const int pageToShow = 3;
                                var pagesToShow = new List<int>();

                                for (int i = 1; i <= pageToShow; i++)
                                {
                                    pagesToShow.Add(i);
                                }

                                for (var i = this.Model.CurrentPage - pageToShow; i <= this.Model.CurrentPage + pageToShow; i++)
                                {
                                    if (i > 0)
                                    {
                                        pagesToShow.Add(i);
                                    }
                                }

                                for (var i = this.Model.PagesCount - pageToShow + 1; i <= this.Model.PagesCount; i++)
                                {
                                    if (i > 0)
                                    {
                                        pagesToShow.Add(i);
                                    }
                                }

                                pagesToShow = pagesToShow.Where(x => x <= this.Model.PagesCount).Distinct().OrderBy(x => x).ToList();
                            }

                            @for (var i = 0; i < pagesToShow.Count; i++)
                            {
                                var className = string.Empty;
                                var pageNumber = pagesToShow[i];

                                if (pageNumber == this.Model.CurrentPage)
                                {
                                    className = "active";
                                }

                                if (i > 0 && pageNumber - 1 != pagesToShow[i - 1])
                                {
                                    <li class="page-item @className">
                                        <a class="page-link" asp-area="Admin" asp-controller="Products" asp-action="Index" asp-route-id="@(pagesToShow[i - 1] + 1)">...</a>
                                    </li>
                                }
                                <li class="page-item @className"><a class="page-link" asp-area="Admin" asp-controller="Products" asp-action="Index" asp-route-id="@pageNumber">@pageNumber</a></li>
                            }

                            @if (this.Model.CurrentPage < this.Model.PagesCount)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-area="Admin" asp-controller="Products" asp-action="Index" asp-route-id="@(this.Model.CurrentPage + 1)">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>